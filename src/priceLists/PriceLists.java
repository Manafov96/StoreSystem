/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package priceLists;

import article.Articles;
import java.awt.Font;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Tools.DropDown;
import javax.swing.DefaultCellEditor;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableCellRenderer;
import static Tools.getConnection.getConnection;
import static Tools.setValuesComboBox.setValuesComboBox;

/**
 *
 * @author Viko
 */
public class PriceLists extends javax.swing.JFrame {

    /**
     * Creates new form PriceLists
     */
    public PriceLists() {
        initComponents();
        // setComboBox Article Groups
        setValuesComboBox("select AG.ID, AG.NAME_BG from ARTICLE_GROUPS AG", jcbArticleGroup, false, -1 , false);
        DefaultTableModel model = (DefaultTableModel) jTablePriceLists.getModel();
        model.setRowCount(0);
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(JLabel.RIGHT);
        jTablePriceLists.getColumnModel().getColumn(1).setCellRenderer(rightRenderer);
        jTablePriceLists.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
        jTablePriceLists.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
        jTablePriceLists.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 12));

    }

    private void setValuesArticles() {
        String sql = "select A.ID, A.NAME_BG from ARTICLES A where not exists "
                  + "(select PL.ARTICLE_ID from PRICE_LISTS PL where PL.ARTICLE_ID = A.ID) and  A.ARTICLE_GROUPS_ID = " 
                   + (((DropDown) jcbArticleGroup.getSelectedItem()).getId());
        setValuesComboBox(sql, jcbArticle, false, -1, false);
    }
    
    private ArrayList<Prices> getArticlePrices() {
        Vector<DropDown> article = new Vector<>();
        ArrayList<Prices> PriceList = new ArrayList<>();
        Connection con = getConnection();
        String query = "select A.ID ARTICLE_ID ,A.NAME_BG ARTICLE, PL.SALE_PRICE1 PRICE1, PL.SALE_PRICE2 PRICE2, "
                     + "PL.SALE_PRICE3 PRICE3 from PRICE_LISTS PL join ARTICLES A on PL.ARTICLE_ID = A.ID "
                     + "where A.ARTICLE_GROUPS_ID = " + (((DropDown) jcbArticleGroup.getSelectedItem()).getId());

        Statement st;
        ResultSet rs;

        try {

            st = con.createStatement();
            rs = st.executeQuery(query);
            Prices price;

            while (rs.next()) {
                article.addElement(new DropDown(rs.getInt("ARTICLE_ID"), rs.getString("ARTICLE")));
                jcbArticleTable.setModel(new DefaultComboBoxModel(article));
                price = new Prices(rs.getInt("ID"), jcbArticleTable.getModel().getSelectedItem(), rs.getDouble("PRICE1"),
                        rs.getDouble("PRICE2"), rs.getDouble("PRICE3"));

                PriceList.add(price);
                article.clear();
            }

        } catch (SQLException ex) {
            Logger.getLogger(Articles.class.getName()).log(Level.SEVERE, null, ex);
        }

        return PriceList;

    }

    private void Show_Articles_In_JTable() {
        ArrayList<Prices> list = getArticlePrices();
        DefaultTableModel model = (DefaultTableModel) jTablePriceLists.getModel();
        // clear jtable content
        model.setRowCount(0);
        Object[] row = new Object[4];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getArticle();
            row[1] = list.get(i).getPrice1();
            row[2] = list.get(i).getPrice2();
            row[3] = list.get(i).getPrice3();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jcbArticleTable = new javax.swing.JComboBox<>();
        jcbArticleGroup = new javax.swing.JComboBox<>();
        jcbArticle = new javax.swing.JComboBox<>();
        jlbPriceLists = new javax.swing.JLabel();
        jbtnClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePriceLists = new javax.swing.JTable();
        jtxtPrice1 = new javax.swing.JTextField();
        jtxtPrice2 = new javax.swing.JTextField();
        jtxtPrice3 = new javax.swing.JTextField();
        jlbArticle = new javax.swing.JLabel();
        jlbPrice1 = new javax.swing.JLabel();
        jlbPrice3 = new javax.swing.JLabel();
        jlbPrice2 = new javax.swing.JLabel();
        jbtnEdit = new javax.swing.JButton();
        jbtnSave = new javax.swing.JButton();
        jlbArticleGroup = new javax.swing.JLabel();
        jbtnClose1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Ценови Листи");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                onExit(evt);
            }
        });

        jcbArticleGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbArticleGroupActionPerformed(evt);
            }
        });

        jcbArticle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbArticleActionPerformed(evt);
            }
        });

        jlbPriceLists.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jlbPriceLists.setText("Ценови Листи");

        jbtnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/article/clear24.png"))); // NOI18N
        jbtnClear.setText("Изчисти");
        jbtnClear.setFocusPainted(false);
        jbtnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnClearActionPerformed(evt);
            }
        });

        jTablePriceLists.setAutoCreateRowSorter(true);
        jTablePriceLists.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Артикул", "Цена 1", "Цена 2", "Цена 3"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePriceLists.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePriceListsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTablePriceLists);
        if (jTablePriceLists.getColumnModel().getColumnCount() > 0) {
            jTablePriceLists.getColumnModel().getColumn(0).setPreferredWidth(500);
            jTablePriceLists.getColumnModel().getColumn(0).setCellEditor(new DefaultCellEditor(jcbArticleTable));
        }

        jtxtPrice1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtPrice1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxtPrice1FocusLost(evt);
            }
        });

        jtxtPrice2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtPrice2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxtPrice2FocusLost(evt);
            }
        });

        jtxtPrice3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtPrice3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxtPrice3FocusLost(evt);
            }
        });

        jlbArticle.setText("Артикул:");

        jlbPrice1.setText("Цена 1:");

        jlbPrice3.setText("Цена 3:");

        jlbPrice2.setText("Цена 2:");

        jbtnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/article/Update32.png"))); // NOI18N
        jbtnEdit.setText("Обнови");
        jbtnEdit.setFocusPainted(false);
        jbtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEditActionPerformed(evt);
            }
        });

        jbtnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/article/Add32.png"))); // NOI18N
        jbtnSave.setText("Добави");
        jbtnSave.setFocusPainted(false);
        jbtnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSaveActionPerformed(evt);
            }
        });

        jlbArticleGroup.setText("Група:");

        jbtnClose1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sale/Delete32.png"))); // NOI18N
        jbtnClose1.setText("Изход");
        jbtnClose1.setFocusPainted(false);
        jbtnClose1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnClose1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlbArticleGroup)
                                    .addComponent(jcbArticleGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlbArticle)
                                    .addComponent(jcbArticle, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jlbPrice1)
                                        .addGap(47, 47, 47)
                                        .addComponent(jlbPrice2)
                                        .addGap(22, 22, 22))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jtxtPrice1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtxtPrice2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtxtPrice3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(jlbPrice3)))
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(342, 342, 342)
                                .addComponent(jlbPriceLists)
                                .addGap(331, 331, 331)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbtnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jbtnClose1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(879, 879, 879)
                .addComponent(jbtnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jlbPriceLists)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jlbPrice1)
                                    .addComponent(jlbPrice3)
                                    .addComponent(jlbPrice2)
                                    .addComponent(jlbArticleGroup))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jtxtPrice1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtxtPrice2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtxtPrice3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jcbArticleGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlbArticle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbArticle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnSave)
                        .addGap(30, 30, 30)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(jbtnClose1)
                .addGap(28, 28, 28))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTablePriceListsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePriceListsMouseClicked
        jcbArticle.getModel().setSelectedItem(((DropDown) jTablePriceLists.getValueAt(jTablePriceLists.getSelectedRow(), 0)));
        jtxtPrice1.setText(jTablePriceLists.getValueAt(jTablePriceLists.getSelectedRow(), 1).toString().replace(",", "."));
        jtxtPrice2.setText(jTablePriceLists.getValueAt(jTablePriceLists.getSelectedRow(), 2).toString().replace(",", "."));
        jtxtPrice3.setText(jTablePriceLists.getValueAt(jTablePriceLists.getSelectedRow(), 3).toString().replace(",", "."));
        jbtnSave.setEnabled(false);
    }//GEN-LAST:event_jTablePriceListsMouseClicked

    private void jbtnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnClearActionPerformed
        jcbArticleGroup.setSelectedIndex(-1);
        jcbArticle.setSelectedIndex(-1);
        jtxtPrice1.setText("");
        jtxtPrice2.setText("");
        jtxtPrice3.setText("");
        DefaultTableModel model = (DefaultTableModel) jTablePriceLists.getModel();
        model.setRowCount(0);
        jbtnSave.setEnabled(true);
    }//GEN-LAST:event_jbtnClearActionPerformed

    private void jcbArticleGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbArticleGroupActionPerformed
        if (jcbArticleGroup.getSelectedIndex() != -1) {
            setValuesArticles();
            Show_Articles_In_JTable();
        }
    }//GEN-LAST:event_jcbArticleGroupActionPerformed

    private void jcbArticleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbArticleActionPerformed
        jtxtPrice1.setText("");
        jtxtPrice2.setText("");
        jtxtPrice3.setText("");
    }//GEN-LAST:event_jcbArticleActionPerformed

    private void jbtnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSaveActionPerformed
        if (jcbArticle.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Моля изберете артикул, на когото искате да добавите цена!");
        } else if (jtxtPrice1.getText().isEmpty() || jtxtPrice2.getText().isEmpty() || jtxtPrice3.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Моля добавeте цена!");
        } else {
            try {
                Connection con = getConnection();
                PreparedStatement ps = con.prepareStatement("update or insert into PRICE_LISTS (ARTICLE_ID, "
                                        + "SALE_PRICE1, SALE_PRICE2, SALE_PRICE3)\n"
                                        + "values (?, ?, ?, ?) matching (ARTICLE_ID, SALE_PRICE1, SALE_PRICE2, SALE_PRICE3)");
                ps.setInt(1, (((DropDown) jcbArticle.getSelectedItem()).getId()));
                ps.setDouble(2, Double.parseDouble(jtxtPrice1.getText()));
                ps.setDouble(3, Double.parseDouble(jtxtPrice2.getText()));
                ps.setDouble(4, Double.parseDouble(jtxtPrice3.getText()));

                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Записано в базата данни!");
                jcbArticle.setSelectedIndex(-1);
                jtxtPrice1.setText("");
                jtxtPrice2.setText("");
                jtxtPrice3.setText("");

                DefaultTableModel dm = (DefaultTableModel) jTablePriceLists.getModel();
                dm.setRowCount(0);
                Show_Articles_In_JTable();
                setValuesArticles();
            } catch (HeadlessException | SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }

    }//GEN-LAST:event_jbtnSaveActionPerformed

    private void jtxtPrice1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtPrice1FocusLost
        if (!jtxtPrice1.getText().isEmpty()) {
            try {
                DecimalFormat dc = new DecimalFormat("0.00");
                String formattedText = dc.format(Double.parseDouble(jtxtPrice1.getText()));
                jtxtPrice1.setText(formattedText.replace(",", "."));
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Грешен формат!");
                jtxtPrice1.setText("");
            }
        }
    }//GEN-LAST:event_jtxtPrice1FocusLost

    private void jtxtPrice2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtPrice2FocusLost
        if (!jtxtPrice2.getText().isEmpty()) {
            try {
                DecimalFormat dc = new DecimalFormat("0.00");
                String formattedText = dc.format(Double.parseDouble(jtxtPrice2.getText()));
                jtxtPrice2.setText(formattedText.replace(",", "."));
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Грешен формат!");
                jtxtPrice2.setText("");
            }
        }
    }//GEN-LAST:event_jtxtPrice2FocusLost

    private void jtxtPrice3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtPrice3FocusLost
        if (!jtxtPrice3.getText().isEmpty()) {
            try {
                DecimalFormat dc = new DecimalFormat("0.00");
                String formattedText = dc.format(Double.parseDouble(jtxtPrice3.getText()));
                jtxtPrice3.setText(formattedText.replace(",", "."));
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Грешен формат!");
                jtxtPrice3.setText("");
            }
        }
    }//GEN-LAST:event_jtxtPrice3FocusLost

    private void jbtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEditActionPerformed
        if (jTablePriceLists.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Моля изберете артикул, който искате да редактирате!");
        } else if (jtxtPrice1.getText().isEmpty() || jtxtPrice2.getText().isEmpty() || jtxtPrice3.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Не може да изтриете цените на артикула!");
        } else {
            try {
                Connection con = getConnection();
                PreparedStatement ps = con.prepareStatement("update PRICE_LISTS\n"
                                                            + "set ARTICLE_ID = ?,\n"
                                                            + "SALE_PRICE1 = ?,\n"
                                                            + "SALE_PRICE2 = ?,\n"
                                                            + "SALE_PRICE3 = ?\n"
                                                            + "where (ARTICLE_ID = ?)");
                ps.setInt(1, (((DropDown) jcbArticle.getSelectedItem()).getId()));
                ps.setDouble(2, Double.parseDouble(jtxtPrice1.getText()));
                ps.setDouble(3, Double.parseDouble(jtxtPrice2.getText()));
                ps.setDouble(4, Double.parseDouble(jtxtPrice3.getText()));
                ps.setInt(5, (((DropDown) jcbArticle.getSelectedItem()).getId()));
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Успешно направихте промени!");
                jcbArticle.setSelectedIndex(-1);
                jtxtPrice1.setText("");
                jtxtPrice2.setText("");
                jtxtPrice3.setText("");
                Show_Articles_In_JTable();
                jbtnSave.setEnabled(true);
            } catch (HeadlessException | SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_jbtnEditActionPerformed

    private void jbtnClose1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnClose1ActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jbtnClose1ActionPerformed

    private void onExit(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_onExit
        setVisible(false);
    }//GEN-LAST:event_onExit

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PriceLists.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PriceLists.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PriceLists.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PriceLists.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PriceLists().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePriceLists;
    private javax.swing.JButton jbtnClear;
    private javax.swing.JButton jbtnClose1;
    private javax.swing.JButton jbtnEdit;
    private javax.swing.JButton jbtnSave;
    private javax.swing.JComboBox<String> jcbArticle;
    private javax.swing.JComboBox<String> jcbArticleGroup;
    private javax.swing.JComboBox<String> jcbArticleTable;
    private javax.swing.JLabel jlbArticle;
    private javax.swing.JLabel jlbArticleGroup;
    private javax.swing.JLabel jlbPrice1;
    private javax.swing.JLabel jlbPrice2;
    private javax.swing.JLabel jlbPrice3;
    private javax.swing.JLabel jlbPriceLists;
    private javax.swing.JTextField jtxtPrice1;
    private javax.swing.JTextField jtxtPrice2;
    private javax.swing.JTextField jtxtPrice3;
    // End of variables declaration//GEN-END:variables
}
